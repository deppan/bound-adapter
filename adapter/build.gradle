plugins {
  id 'com.android.library'
  id 'kotlin-android'
  id 'kotlin-kapt'
  id 'maven-publish'
}

android {
  compileSdkVersion 30
  buildToolsVersion "30.0.3"

  defaultConfig {
    minSdkVersion 23
    targetSdkVersion 30

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    consumerProguardFiles "consumer-rules.pro"
  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }

  buildFeatures {
    dataBinding true
  }

  lintOptions {
    abortOnError false
  }
}

dependencies {
  compileOnly 'androidx.recyclerview:recyclerview:1.2.0'
  testImplementation 'junit:junit:4.13.1'
  androidTestImplementation 'androidx.test.ext:junit:1.1.2'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

task generateSourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier "sources"
}

static def release() {
  return "https://s01.oss.sonatype.org/content/repositories/releases"
}

static def snapshot() {
  return "https://s01.oss.sonatype.org/content/repositories/snapshots"
}

static def branch() {
  return 'git symbolic-ref --short -q HEAD'.execute().text.trim()
}

static def latestTag() {
  def tag = 'git describe --tags'.execute().text.trim()
  if (tag.startsWith('v'))
    return tag.substring(1)
  else {
    return tag
  }
}

static def publishUrl() {
  if ("master".equalsIgnoreCase(branch())) {
    return release()
  } else {
    return snapshot()
  }
}

static def versionName() {
  if ("master".equalsIgnoreCase(branch())) {
    return latestTag()
  } else {
    return latestTag() + "-SNAPSHOT"
  }
}

afterEvaluate {
  publishing {
    publications {
      release(MavenPublication) {
        from components.release

        groupId = "io.github.deppan.adapter"
        artifactId = "adapter"
        version = versionName()
        artifact generateSourcesJar
      }
    }
    repositories {
      maven {
        credentials {
          url = publishUrl()
          username = project.property('maven.username')
          password = project.property('maven.password')
        }
      }
    }
  }
}
